<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABmzP9mzP9mzP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmzP9mzP8AAAAAAABm
        zP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABmzP9mzP8AAAAAAAAAAAAAAABmzP8AAAAAAAAAAAAAAACIiIiIiIiIiIj/
        ///d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmzP9mzP8AAAAAAAAA
        AAAAAAAAAAAAAABmzP8AAAAAAACIiIiIiIiIiIj////////////d3d3d3d0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABmzP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiIiIiIiIiIj/
        ///////////////////d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmzP8A
        AAAAAAAAAAAAAAAAAAAAAAAAAACIiIiIiIiIiIj///////////+IiIj////d3d3////d3d3d3d3d3d3d
        3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmzP8AAAAAAAAAAAB3d3d3d3cAAACIiIiIiIj/
        ///////////////////////d3d3d3d3////d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAB3d3d3d3eqqqp3d3cAAAD////////////////////////d3d3d3d3d3d3d3d3/
        ///d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3d3d3d3f///////+qqqoA
        AAD///////+IiIj////////d3d3d3d3d3d3d3d0AAADd3d3////d3d3d3d3d3d3d3d3d3d3d3d3d3d0A
        AAAAAAAAAAAAAAAAAAB3d3d3d3f///////////////+qqqoAAADd3d3////////d3d3d3d3d3d3d3d0A
        AAAAAABmzP/d3d3////d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAB3d3f/////////////
        ///////d3d2qqqoAAADd3d3d3d3d3d3d3d3d3d0AAAAAAABmzP9mzP9mzP/d3d3////d3d3d3d3d3d3d
        3d3d3d3d3d3d3d0AAAAAAAAAAAD////////////////////d3d3d3d3d3d2qqqoAAADd3d3d3d3d3d0A
        AAAAAABmzP9mzP9mzP9mzP9mzP/d3d3////d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAD///+I
        iIj////d3d3d3d3d3d3d3d3d3d2qqqoAAADd3d0AAAAAAABmzP9mzP9mzP9mzP9mzP9mzP9mzP/d3d3/
        ///d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAD////////d3d3d3d3d3d3d3d3d3d0AAAAAAACqqqoA
        AADd3d0AAABmzP9mzP9mzP9mzP9mzP9mzP9mzP9mzP/d3d3////d3d3d3d3d3d3d3d3d3d3d3d3d3d0A
        AAAAAADd3d3d3d3d3d3d3d3d3d0AAAAAAADMmQDMZgCqqqoAAADd3d0AAABmzP9mzP9mzP9mzP9mzP9m
        zP9mzP8Amczd3d3////d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAADd3d3d3d3d3d0AAAAAAADMmQDM
        mQDMmQDMZgCqqqoAAADd3d0AAABmzP9mzP9mzP9mzP9mzP8AmcwAmcz////d3d3d3d3////d3d3d3d3d
        3d3d3d3d3d3d3d0AAAAAAAD///8AAAAAAADMmQDMmQDMmQDMmQDMmQDMZgCqqqoAAADd3d0AAABmzP9m
        zP9mzP8AmcwAmcz////d3d3d3d3////////d3d3////d3d3d3d3d3d3d3d3d3d0AAAAAAAD///8AAADM
        mQDMmQDMmQDMmQDMmQDMmQDMZgCqqqoAAADd3d0AAABmzP8AmcwAmcz////////d3d3////////////d
        3d3d3d3d3d3////d3d3d3d3d3d3d3d0AAAAAAAD///8AAADMmQDMmQDMmQDMmQDMmQDMmQDMZgCqqqoA
        AADd3d0AAAAAmcz////d3d3d3d3d3d3////////d3d3d3d3d3d3d3d3d3d3d3d3////////d3d3d3d0A
        AAAAAAD///8AAADMmQDMmQDMmQDMmQDMmQDMmQDMZgCqqqoAAADd3d3d3d3d3d3d3d3d3d3////////d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3////d3d0AAAAAAAD///8AAADMmQDMmQDMmQDMmQDM
        mQDMmQDMZgCqqqoAAADd3d3d3d3d3d3////////d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3///8AAAAAAAD///8AAADMmQDMmQDMmQDMmQDMZgDMZgD///+qqqoAAACqqqr////////d
        3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAD///8AAADM
        mQDMmQDMZgDMZgD////d3d3d3d2qqqoAAAAAAACqqqqqqqrd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAD///8AAADMZgDMZgD////d3d3d3d3///+qqqq7u7u7
        u7uqqqoAAAAAAACqqqqqqqqqqqrd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAA
        AAAAAAD///8AAAD////d3d3d3d3///////+7u7u7u7vd3d3d3d3d3d2qqqqqqqoAAAAAAACqqqqqqqrd
        3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAD////d3d3d3d3///////+7u7u7
        u7vd3d3d3d3d3d3d3d3d3d3d3d3d3d2qqqqqqqoAAAAAAACqqqqqqqqqqqqqqqqqqqoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD///////+7u7u7u7vd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d
        3d3d3d2qqqqqqqoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC7u7vd3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd3d3d3d3d3d3d3d3d3d3d
        3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADd3d3d3d3d3d3d3d3d3d3d3d0AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/+H///+B8f/+AYD/+BAAf+BwAD/h4AAf4wAAD+AAAAfgAAADwAAAA4AAAAMAA
        AACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAADwAA
        AD+AAAD/wAAH//AAH//8AH///4H//w==
</value>
  </data>
</root>